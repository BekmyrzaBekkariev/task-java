public class if8 {
}

/** Средство проверки номера подростка
 Мы будем говорить, что число является "подростковым", если оно находится в диапазоне от 13 до 19 (включительно).

 Напишите метод с именем hasTeen с 3 параметрами типа int.

 Метод должен возвращать логическое значение, и он должен возвращать значение true, если один из параметров находится в диапазоне 13 (включительно) - 19 (включительно). В противном случае возвращает значение false.



 ПРИМЕРЫ ВВОДА/ВЫВОДА:

 hasTeen(9, 99, 19); должно возвращать значение true, так как 19 находится в диапазоне 13 - 19

 hasTeen(23, 15, 42); должно возвращать значение true, так как 15 находится в диапазоне 13 - 19

 hasTeen(22, 23, 34); должно возвращать значение false, поскольку числа 22, 23, 34 не находятся в диапазоне 13-19



 Напишите другой метод с именем isTeen с 1 параметром типа int.

 Метод должен возвращать логическое значение, и он должен возвращать значение true, если параметр находится в диапазоне 13 (включительно) - 19 (включительно). В противном случае возвращает значение false.

 ПРИМЕРЫ ВВОДА/ВЫВОДА:

 isTeen(9); должно возвращать значение false, так как 9 не находится в диапазоне 13 - 19

 isTeen(13); должно возвращать значение true, так как 13 находится в диапазоне 13 - 19



 ПРИМЕЧАНИЕ: Все методы должны быть определены как общедоступные статические, как мы делали до сих пор в курсе.
 ПРИМЕЧАНИЕ: Не добавляйте основной метод в код решения. **/

 class TeenNumberChecker {
	public static boolean isTeen(int number){
		return number >= 13 && number <= 19;
	}
	public static boolean hasTeen(int a, int b, int c){
		if (isTeen(a) || isTeen(b) || isTeen(c) ){
			return true;
		}
		return false;
	}

}